## Adelaide
# Filter data from VARdata
Adelaide.data <- Var.data %>%
filter(reg1 == "Adelaide")
Adelaide.data %>%
dplyr::select(Date, log_p) %>%
ggplot(aes(Date, log_p)) +
geom_line()
# Removing mean from adelaide lop_p
Adelaide.data$log_p_dm <- residuals(lm(Adelaide.data$log_p~1))
Adelaide.data$log_e_dm <- residuals(lm(Adelaide.data$log_e~1))
Adelaideplot <- Adelaide.data %>%
ungroup() %>%
dplyr::select(-reg1,-log_p_dm, -log_e_dm) %>%
gather(Variable, Val, -Date) %>%
ggplot(aes(Date)) +
geom_line(aes(y = Val,colour = Variable))+
xlab("")+
ylab("")+
ggtitle("Adelaide")+
theme_bw()+
theme(legend.position = "none")
# Estiamte var
Adelaide.var <- VAR(Adelaide.data[,c("delta_e","log_e_dm","log_p_dm")],lag.max = 8,ic = "AIC",
type = "none")
# AIC favours 2 lags, dynamic responses don't change dramatically when including more.
# AC test, BG for small number of lags PT for large
Adelaide.var %>%
serial.test(lags.pt = 16, type = "PT.adjusted")
Adelaide.var %>%
serial.test(lags.bg = 4, type = "ES")
# Normality:
# Univariate residuals are fine
# Mulitvariate residuals are not normal, however small sample the test is oversized (Killian and Lutkepohl 2017) there are small sample corrections but are not implemented in the VARS package
Adelaide.var %>%
normality.test(multivariate.only = FALSE)
# ARCH
Adelaide.var %>%
arch.test(lags.multi = 4, multivariate.only = FALSE)
# stability
Adelaide.var %>%
stability(type = "OLS-CUSUM") %>%
plot()
# Recursive residuals for delta_e move outside the CI, but probably nothing to worry too much about. Possibly include a dummy variable?
Adelaide.var %>%
stability(type = "Rec-CUSUM") %>%
plot()
Adelaide.svar <-  SVAR(Adelaide.var, Bmat = Bmat)
Adelaide.svar$B/Adelaide.svar$Bse
RegionsVar$Adelaide$VAR <- Adelaide.var
RegionsVar$Adelaide$svar <- Adelaide.svar
RegionsVar$Adelaide$`svar irf`$data <- Adelaide.svar %>% irf(n.ahead = 20)
## Townsville
# Filter data from VARdata
Townsville.data <- Var.data %>%
filter(reg1 == "Townsville")
Townsville.data %>%
dplyr::select(Date, log_p) %>%
ggplot(aes(Date, log_p)) +
geom_line()
# Remove SB in log_p
Townsville.data$log_p_dm <- tsoutliers::tso(ts(Townsville.data$log_p, f = 4))$yadj
Townsplot <- Townsville.data %>%
ungroup() %>%
dplyr::select( -reg1,-log_p_dm) %>%
gather(Variable, Val, -Date) %>%
ggplot(aes(Date)) +
geom_line(aes(y = Val,colour = Variable))+
xlab("")+
ylab("")+
ggtitle("Townsville")+
theme_bw()+
theme(legend.position = "none")
# Estiamte var
Townsville.var <- VAR(Townsville.data[,c("delta_e","log_e","log_p_dm")], lag.max = 8, ic = "AIC", type ="const" )
Townsville.var <- VAR(Townsville.data[,c("delta_e","log_e","log_p_dm")], p =4, type ="const" )
# AIC favours 2 lags, dynamic responses don't change dramatically when including more.
# AC test, BG for small number of lags PT for large
Townsville.var %>%
serial.test(lags.pt = 24, type = "PT.adjusted")
Townsville.var %>%
serial.test(lags.bg = 10, type = "ES")
# Normality:
# Univariate residuals are fine
# Mulitvariate residuals are not normal, however small sample the test is oversized (Killian and Lutkepohl 2017) there are small sample corrections but are not implemented in the VARS package
Townsville.var %>%
normality.test(multivariate.only = FALSE)
# ARCH
Townsville.var %>%
arch.test(lags.multi = 10, multivariate.only = FALSE)
# stability
Townsville.var %>%
stability(type = "OLS-CUSUM") %>%
plot()
# Recursive residuals for delta_e move outside the CI, but probably nothing to worry too much about. Possibly include a dummy variable?
Townsville.var %>%
stability(type = "Rec-CUSUM") %>%
plot()
Townsville.svar <-  SVAR(Townsville.var, Bmat = Bmat)
Townsville.svar$B/Townsville.svar$Bse
RegionsVar$Townsville$VAR <- Townsville.var
RegionsVar$Townsville$svar <- Townsville.svar
RegionsVar$Townsville$`svar irf`$data <- Townsville.svar %>% irf(n.ahead = 20)
## Mandurah
# Filter data from VARdata
Mandurah.data <- Var.data %>%
filter(reg1 == "Mandurah")
Mandurah.data %>%
dplyr::select(Date, delta_e) %>%
ggplot(aes(Date, delta_e)) +
geom_line()
# Remove outlier in  in delta_e
Mandurah.data$delta_e_adj <- tsoutliers::tso(ts(Mandurah.data$delta_e, f = 4))$yadj
Mandurah.data$log_e_adj <- tsoutliers::tso(ts(Mandurah.data$log_e, f = 4))$yadj
Mandurah.data$log_p_dm <- residuals(lm(Mandurah.data$log_p~1))
Manplot <- Mandurah.data %>%
ungroup() %>%
dplyr::select( -reg1,-log_e_adj, -log_p_dm, -delta_e_adj) %>%
gather(Variable, Val, -Date) %>%
ggplot(aes(Date)) +
geom_line(aes(y = Val,colour = Variable))+
xlab("")+
ylab("")+
ggtitle("Mandurah")+
theme_bw()+
theme(legend.position = "none")
# Estiamte var
Mandurah.var <- VAR(Mandurah.data[,c("delta_e_adj","log_e_adj","log_p_dm")], lag.max = 8, ic = "AIC", type ="none" )
Mandurah.var <- VAR(Mandurah.data[,c("delta_e_adj","log_e_adj","log_p_dm")], p =4, type ="none")
# AIC favours 5 lags, dynamic responses don't change dramatically when including more.
# AC test, BG for small number of lags PT for large
Mandurah.var %>%
serial.test(lags.pt = 12, type = "PT.adjusted")
Mandurah.var %>%
serial.test(lags.bg = 8, type = "ES")
# Normality:
# Univariate - log_e could be an issue - likely an outlier
# Mulitvariate residuals are not normal, however small sample the test is oversized (Killian and Lutkepohl 2017) there are small sample corrections but are not implemented in the VARS package
Mandurah.var %>%
normality.test(multivariate.only = FALSE)
# ARCH
Mandurah.var %>%
arch.test(lags.multi = 10, multivariate.only = FALSE)
# stability
Mandurah.var %>%
stability(type = "OLS-CUSUM") %>%
plot()
# Recursive residuals for delta_e move outside the CI, but probably nothing to worry too much about. Possibly include a dummy variable?
Mandurah.var %>%
stability(type = "Rec-CUSUM") %>%
plot()
Mandurah.svar <-  SVAR(Mandurah.var, Bmat = Bmat)
Mandurah.svar$B/Mandurah.svar$Bse
RegionsVar$Mandurah$VAR <- Mandurah.var
RegionsVar$Mandurah$svar <- Mandurah.svar
RegionsVar$Mandurah$`svar irf`$data <- Mandurah.svar %>% irf(n.ahead = 20)
## West and  North West
# Filter data from VARdata
WNW.data <- Var.data %>%
filter(reg1 == "West and North West")
WNW.data %>%
dplyr::select(Date, delta_e) %>%
ggplot(aes(Date, delta_e)) +
geom_line()
# Remove trend in log_e
WNW.data$log_e_adj <- residuals(lm(WNW.data$log_e~c(1:length(WNW.data$log_e) ) ) )
WNW.data$log_p_dm <- residuals(lm(WNW.data$log_p~1))
WNW.data$delta_e_adj <- tsoutliers::tso(ts(WNW.data$delta_e, f =4))$yadj
WNW.plot <- WNW.data %>%
ungroup() %>%
dplyr::select( -reg1,-log_e_adj,-delta_e_adj,-log_p_dm) %>%
gather(Variable, Val, -Date) %>%
ggplot(aes(Date)) +
geom_line(aes(y = Val,colour = Variable))+
xlab("")+
ylab("")+
ggtitle("West North West")+
theme_bw()+
theme(legend.position = "none")
# Estiamte var
WNW.var <- VAR(WNW.data[,c("delta_e_adj","log_e_adj","log_p_dm")], lag.max = 8, ic = "AIC", type ="none" )
WNW.var <- VAR(WNW.data[,c("delta_e_adj","log_e_adj","log_p_dm")], p =4, type ="none")
# AIC favours 5 lags, dynamic responses don't change dramatically when including more.
# AC test, BG for small number of lags PT for large
WNW.var %>%
serial.test(lags.pt = 12, type = "PT.adjusted")
WNW.var %>%
serial.test(lags.bg = 8, type = "ES")
# Normality:
# Univariate - log_e could be an issue - likely an outlier
# Mulitvariate residuals are not normal, however small sample the test is oversized (Killian and Lutkepohl 2017) there are small sample corrections but are not implemented in the VARS package
WNW.var %>%
normality.test(multivariate.only = FALSE)
# ARCH
WNW.var %>%
arch.test(lags.multi = 10, multivariate.only = FALSE)
# stability
WNW.var %>%
stability(type = "OLS-CUSUM") %>%
plot()
# Recursive residuals for delta_e move outside the CI, but probably nothing to worry too much about. Possibly include a dummy variable?
WNW.var %>%
stability(type = "Rec-CUSUM") %>%
plot()
WNW.svar <-  SVAR(WNW.var, Bmat = Bmat)
WNW.svar$B/WNW.svar$Bse
RegionsVar$`West and North West`$VAR <- WNW.var
RegionsVar$`West and North West`$svar <- WNW.svar
RegionsVar$`West and North West`$`svar irf`$data <- WNW.svar %>% irf(n.ahead = 20)
#--------------------------------------------------------------------------------------------
# 5. Facet chart of raw data
#--------------------------------------------------------------------------------------------
gridExtra::grid.arrange(Adelaideplot,Townsplot,Manplot,WNW.plot)
#--------------------------------------------------------------------------------------------
# 5. IRFs for charts
#--------------------------------------------------------------------------------------------
growby <- function(x, y, b = TRUE){
for(i in seq(1:21)){
if(b == TRUE){
x[i+1] <- x[i]*(1.02)
}else{
x[i+1] <- x[i]*(1.02+y[i])
}
}
return(x)
}
index.fun <- function(y){
x <- rep(100,21)
for(i in seq(1:21)){
x[i+1]= x[i]*y[i+1]
}
return(x)
}
(RegionsVar$Mandurah$`svar irf`$data$irf$delta_e_adj[,1]*shockval) %>% plot()
chartdata <- list()
for(i in regions){
sigmas <- RegionsVar[[i]]$`svar irf`$data$irf[[1]][1,1]
chartdata[[paste("Emp",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))
chartdata[[paste("Emp H",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))
chartdata[[paste("Emp L",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))
#chartdata[[paste("Emp",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,1]*(-1/sigmas)))
#chartdata[[paste("Emp H",i)]] <-  c(0,(RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,1]*(-1/sigmas)))
#chartdata[[paste("Emp L",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,1]*(-1/sigmas)))
chartdata[[paste("Ur",i)]] <-  c(0,(0-RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Ur H",i)]] <-  c(0,(0-RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Ur L",i)]] <-  c(0,0-(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Part",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,3])*(-1/sigmas))
chartdata[[paste("Part H",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,3])*(-1/sigmas))
chartdata[[paste("Part L",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,3])*(-1/sigmas))
}
chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
) %>%
ggplot(aes(x = h))+
facet_wrap(~Var, scales = "free")+
geom_line(aes(y = Value), colour = "red")+
geom_ribbon(aes(ymin = Less95, ymax = Plus95, group = Var), alpha = 0.2)+
theme_classic()
############ WE DID IT!!!!!!!!!!!!!!!!! ###########################
chartdata <- list()
for(i in regions){
sigmas <- RegionsVar[[i]]$`svar irf`$data$irf[[1]][1,1]
chartdata[[paste("Emp",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))-100
chartdata[[paste("Emp H",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))-100
chartdata[[paste("Emp L",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))-100
#chartdata[[paste("Emp",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,1]*(-1/sigmas)))
#chartdata[[paste("Emp H",i)]] <-  c(0,(RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,1]*(-1/sigmas)))
#chartdata[[paste("Emp L",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,1]*(-1/sigmas)))
chartdata[[paste("Ur",i)]] <-  c(0,(0-RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Ur H",i)]] <-  c(0,(0-RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Ur L",i)]] <-  c(0,0-(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Part",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,3])*(-1/sigmas))
chartdata[[paste("Part H",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,3])*(-1/sigmas))
chartdata[[paste("Part L",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,3])*(-1/sigmas))
}
chartdata <- list()
for(i in regions){
sigmas <- RegionsVar[[i]]$`svar irf`$data$irf[[1]][1,1]
chartdata[[paste("Emp",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))-100
chartdata[[paste("Emp H",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))-100
chartdata[[paste("Emp L",i)]] <- index.fun(y =(growby(x = rep(100,21), y = 0.01*RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,1]*(-1/sigmas) , b=FALSE)/growby(x = rep(100,21), b=TRUE)))-100
#chartdata[[paste("Emp",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,1]*(-1/sigmas)))
#chartdata[[paste("Emp H",i)]] <-  c(0,(RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,1]*(-1/sigmas)))
#chartdata[[paste("Emp L",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,1]*(-1/sigmas)))
chartdata[[paste("Ur",i)]] <-  c(0,(0-RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Ur H",i)]] <-  c(0,(0-RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Ur L",i)]] <-  c(0,0-(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,2])*(-1/sigmas))
chartdata[[paste("Part",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$irf$delta_e[,3])*(-1/sigmas))
chartdata[[paste("Part H",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Upper$delta_e[,3])*(-1/sigmas))
chartdata[[paste("Part L",i)]] <- c(0,(RegionsVar[[i]]$`svar irf`$data$Lower$delta_e[,3])*(-1/sigmas))
}
chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
) %>%
ggplot(aes(x = h))+
facet_wrap(~Var, scales = "free")+
geom_line(aes(y = Value), colour = "red")+
geom_ribbon(aes(ymin = Less95, ymax = Plus95, group = Var), alpha = 0.2)+
theme_classic()
names(chartdata)
chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
)
chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
) %>%
filter(grepl("Adelaide",.$Var)) %>%
ggplot(aes(x = h))
chartAde <- chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
) %>%
filter(grepl("Adelaide",.$Var)) %>%
ggplot(aes(x = h)) +
geom_line(aes(y= Value, colour = Var))
chartAde
chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
) %>%
filter(grepl("Adelaide",.$Var)) %>%
ggplot(aes(x = h)) +
geom_line(aes(y= Value, colour = Var))+
geom_ribbon(aes(ymin = Less95, ymax = Plus95, group = Var), alpha = 0.2)+
theme_classic()
charlist <- list()
for(i in regions){
chartlist[[i]] <- chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
) %>%
filter(grepl(paste0(i),.$Var)) %>%
ggplot(aes(x = h)) +
geom_line(aes(y= Value, colour = Var))+
geom_ribbon(aes(ymin = Less95, ymax = Plus95, group = Var), alpha = 0.2)+
theme_bw()
}
chartlist <- list()
for(i in regions){
chartlist[[i]] <- chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(!grepl("Emp H|Emp L|Ur H|Ur L|Part H|Part L",.$Var)) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp H|Ur H|Part H",.$Var)) %>%
mutate(Var = gsub(" H","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Plus95 = Value )
) %>%
left_join(chartdata %>%
bind_rows() %>%
mutate(h = 0:21) %>%
gather(Var, Value, -h) %>%
filter(grepl("Emp L|Ur L|Part L",.$Var)) %>%
mutate(Var = gsub(" L","",.$Var)) %>%
mutate(Value = ifelse(grepl("Emp ",.$Var), NA, Value)) %>%
rename(Less95 = Value)
) %>%
filter(grepl(paste0(i),.$Var)) %>%
ggplot(aes(x = h)) +
geom_line(aes(y= Value, colour = Var))+
geom_ribbon(aes(ymin = Less95, ymax = Plus95, group = Var), alpha = 0.2)+
theme_bw()
}
charlist
View(chartlist)
chartlist[["West and North West"]]
chartlist[["Mandurah"]]
gridExtra::grid.arrangechartlist)
gridExtra::grid.arrange(chartlist)
gridExtra::grid.arrange(chartlist[[1]],chartlist[[2]],chartlist[[3]],chartlist[[4]])
